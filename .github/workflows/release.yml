name: Build and Release Flutter APK

on:
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout Repository
      uses: actions/checkout@v2

    - name: Set up Flutter
      uses: subosito/flutter-action@v2
      with:
        channel: stable
        flutter-version-file: pubspec.yaml

    - name: Flutter Pub Get
      run: flutter pub get

    - name: Extract Version
      id: extract_version
      run: |
        VERSION=$(grep '^version:' pubspec.yaml | sed 's/version: //')
        echo "VERSION=$VERSION" >> $GITHUB_ENV

    - name: Check Existing Releases
      id: check_releases
      run: |
        RELEASES=$(gh api repos/$GITHUB_REPOSITORY/releases --jq '.[].tag_name')
        if echo "$RELEASES" | grep -q "^${{ env.VERSION }}$"; then
          echo "Release ${{ env.VERSION }} already exists."
          exit 1
        fi

    - name: Get Last Release Tag
      id: last_release
      run: echo "LAST_TAG=$(git describe --tags --abbrev=0)" >> $GITHUB_ENV

    - name: Generate Commit Log
      id: generate_commit_log
      run: |
        LAST_TAG=${{ steps.last_release.outputs.LAST_TAG }}
        if [ -z "$LAST_TAG" ]; then
          LAST_TAG=$(git rev-list --max-parents=0 HEAD)
        fi
        git log $LAST_TAG..HEAD --pretty=format:"- %s" > commit_log.txt

    - name: Summarize Changes with Copilot
      id: summarize_changes
      run: |
        SUMMARY=$(gh api -X POST https://api.github.com/copilot/summarize -f input=@commit_log.txt -F model=gpt-3.5-turbo)
        echo "SUMMARY=$SUMMARY" >> $GITHUB_ENV

    - name: Build APK
      run: |
        flutter build apk --release
        mv build/app/outputs/flutter-apk/app-release.apk build/app/outputs/flutter-apk/lichtschranke-${{ env.VERSION }}.apk

    - name: Create Release
      id: create_release
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: ${{ env.VERSION }}
        release_name: ${{ env.VERSION }}
        body: |
          Release of the Flutter APK.
          Changes since the last release:
          ${{ env.SUMMARY }}
        draft: false
        prerelease: false

    - name: Upload APK to Release
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: build/app/outputs/flutter-apk/lichtschranke-${{ env.VERSION }}.apk
        asset_name: lichtschranke-${{ env.VERSION }}.apk
        asset_content_type: application/vnd.android.package-archive
